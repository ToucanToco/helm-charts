apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "authz.fullname" . }}-env
  labels:
    {{- include "authz.labels" . | nindent 4 }}
data:
  {{- if .Values.postgresql.enabled }}
  SPICEDB_DATASTORE_CONN_URI: "{{ printf "postgresql://%s:%s@%s-postgresql.%s.svc.cluster.local:%d/%s"  .Values.postgresql.auth.username .Values.postgresql.auth.password .Release.Name .Release.Namespace  (.Values.postgresql.postgresqlPort | int) .Values.postgresql.auth.database }}"
  {{- else }}
  SPICEDB_DATASTORE_CONN_URI: "{{ printf "postgresql://%s:%s@%s:%d/%s"  .Values.postgresql.auth.username .Values.postgresql.auth.password .Values.postgresql.postgresqlHostname (.Values.postgresql.postgresqlPort | int) .Values.postgresql.auth.database }}"
  {{- end }}
  SPICEDB_GRPC_PRESHARED_KEY: {{ .Values.config.preshared_key }}
  SPICEDB_DASHBOARD_TLS_CERT_PATH: /tls/tls.crt
  SPICEDB_DASHBOARD_TLS_KEY_PATH: /tls/tls.key
  SPICEDB_DATASTORE_ENGINE: postgres
  SPICEDB_DISPATCH_CLUSTER_ENABLED: 'false'
  SPICEDB_GRPC_TLS_CERT_PATH: /tls/tls.crt
  SPICEDB_GRPC_TLS_KEY_PATH: /tls/tls.key
  SPICEDB_HTTP_TLS_CERT_PATH: /tls/tls.crt
  SPICEDB_HTTP_TLS_KEY_PATH: /tls/tls.key
  SPICEDB_HTTP_ADDR: ':8443'
  SPICEDB_LOG_LEVEL: {{ .Values.config.log_level }}
  SPICEDB_HTTP_ENABLED: '{{ .Values.config.http_enabled }}'
  SPICEDB_DATASTORE_BOOTSTRAP_FILES: '/etc/bootstrap/bootstrap.yaml'
  SPICEDB_DATASTORE_BOOTSTRAP_OVERWRITE: 'true'
